<!DOCTYPE html>
<html lang="en-US">
    <%- include('./partials/head.ejs') %>
    <body>
        <%- include('./partials/headerNavs.ejs') %>
        <form class="newPostForm">
            <div class="form-group">
                <label class="label" for="postHeadline">Post Headline</label>
                <input type="text" class="text-input" id="postHeadline"/>
            </div>
            <div class="form-group">
                <label class="label" for="postCategory">Category</label>
                <select class="text-input" id="postCategory">
                    <option>-- SELECT --</option>
                </select>
            </div>
            <div class="form-group">
                <button type="button" id="togglePollBtn" class="btn btn--green">Include Poll</button>
            </div>
            <div class="poll-form">
                <div class="form-group poll-option poll-option--1">
                    <label class="label">Option A</label>
                    <input type="text" class="text-input"/>
                </div>
                <div class="form-group poll-option poll-option--2">
                    <label class="label">Option B</label>
                    <input type="text" class="text-input"/>
                </div>
                <div class="form-group poll-option poll-option--3">
                    <label class="label">Option C</label>
                    <input type="text" class="text-input"/>
                </div>
                <div class="form-group poll-option poll-option--4">
                    <label class="label">Option D</label>
                    <input type="text" class="text-input"/>
                </div>
                <div class="form-group poll-option poll-option--5">
                    <label class="label">Option E</label>
                    <input type="text" class="text-input"/>
                </div>
                <div class="form-group poll-option poll-option--6">
                    <label class="label">Option F</label>
                    <input type="text" class="text-input"/>
                </div>
                <button type="button" id="addPollOption" class="btn btn--green">+ Add</button>
            </div>
            <div class="form-group">
                <textarea id="postContent" class="text-input textarea"></textarea>
            </div>
            <div class="form-group">
                <div class="add-image-btn">
                    <input type="file" class="add-image-btn__input" accept="image/*"/>
                    <div class="add-image-btn__select">
                        <div>+ Add Image</div>
                        <div class="image-preview-container"></div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label>Ask Anonymously</label>
                <input type="checkbox"/>
            </div>
            <div class="form-group">
                <button>Submit</button>
                <button>Save Draft</button>
            </div>
        </form>
        <script>

            const imageInput = document.querySelector('.add-image-btn__input');

            document.querySelector('.add-image-btn__select').addEventListener('click', () => {
                document.querySelector('.add-image-btn__input').click();
            });

            imageInput.addEventListener('change', () => {

                const file = imageInput.files[0];

                const existingImg = document.querySelector('.img-preview');

                if(existingImg){
                    existingImg.remove();
                }

                const img = document.createElement('img');
                img.className = 'img-preview';
                document.querySelector('.image-preview-container').appendChild(img);

                const reader = new FileReader();
                reader.onload = e => {
                    img.src = e.target.result;
                }
                reader.readAsDataURL(file);


            });

            const topicsLink = document.querySelector('.topics-link');
            const topicsPane = document.querySelector('.topics-pane');

            topicsLink.addEventListener('click', () => {
                topicsPane.classList.toggle('show');
            });


            //Add poll option
            let counter = 3;
            const addPollOptBtn = document.querySelector('#addPollOption');

            addPollOptBtn.addEventListener('click', () => {

                if(counter < 7){

                    document.querySelector(`.poll-option--${counter}`).classList.add('show');
                    if(counter === 6){
                        addPollOptBtn.style.display = 'none';
                    }
                    ++counter;

                }

            });

            let includePoll = false;
            const togglePollBtn = document.querySelector('#togglePollBtn');

            function togglePoll(){

                includePoll = !includePoll;

                if(includePoll){
                    togglePollBtn.innerText = 'Exclude Poll';
                }else {
                    togglePollBtn.innerText = 'Include Poll';
                }

                document.querySelector('.poll-form').classList.toggle('show');

            }

            togglePollBtn.addEventListener('click', togglePoll);

        </script>
    </body>
</html>